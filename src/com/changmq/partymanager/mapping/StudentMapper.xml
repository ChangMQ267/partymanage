<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.changmq.partymanager.DAO.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.changmq.partymanager.domain.Student" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="pb_id" property="pbId" jdbcType="INTEGER" />
    <result column="ps_id" property="psId" jdbcType="INTEGER" />
    <result column="pa_id" property="paId" jdbcType="INTEGER" />
    <result column="pm_id" property="pmId" jdbcType="INTEGER" />
    <result column="nation_id" property="nationId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="moblie" property="moblie" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="user_state" property="userState" jdbcType="BIT" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
    <result column="gender" property="gender" jdbcType="INTEGER" />
    <result column="pp_id" property="ppId" jdbcType="INTEGER" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="s_no" property="sNo" jdbcType="VARCHAR" />
    <result column="s_age" property="sAge" jdbcType="INTEGER" />
    <result column="s_birthday" property="sBirthday" jdbcType="DATE" />
    <result column="s_birth_place" property="sBirthPlace" jdbcType="VARCHAR" />
    <result column="s_native_place" property="sNativePlace" jdbcType="VARCHAR" />
    <result column="s_address" property="sAddress" jdbcType="VARCHAR" />
    <result column="s_cylc_date" property="sCylcDate" jdbcType="DATE" />
    <result column="s_education" property="sEducation" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, pb_id, ps_id, pa_id, pm_id, nation_id, user_name, password, email, moblie, 
    qq, user_state, user_type, gender, pp_id, class_id, s_no, s_age, s_birthday, s_birth_place, 
    s_native_place, s_address, s_cylc_date, s_education
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.changmq.partymanager.domain.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pm_user_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pm_user_student
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pm_user_student
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.changmq.partymanager.domain.StudentExample" >
    delete from pm_user_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.changmq.partymanager.domain.Student" >
    insert into pm_user_student (user_id, pb_id, ps_id, 
      pa_id, pm_id, nation_id, 
      user_name, password, email, 
      moblie, qq, user_state, 
      user_type, gender, pp_id, 
      class_id, s_no, s_age, 
      s_birthday, s_birth_place, s_native_place, 
      s_address, s_cylc_date, s_education
      )
    values (#{userId,jdbcType=INTEGER}, #{pbId,jdbcType=INTEGER}, #{psId,jdbcType=INTEGER}, 
      #{paId,jdbcType=INTEGER}, #{pmId,jdbcType=INTEGER}, #{nationId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{moblie,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{userState,jdbcType=BIT}, 
      #{userType,jdbcType=INTEGER}, #{gender,jdbcType=INTEGER}, #{ppId,jdbcType=INTEGER}, 
      #{classId,jdbcType=INTEGER}, #{sNo,jdbcType=VARCHAR}, #{sAge,jdbcType=INTEGER}, 
      #{sBirthday,jdbcType=DATE}, #{sBirthPlace,jdbcType=VARCHAR}, #{sNativePlace,jdbcType=VARCHAR}, 
      #{sAddress,jdbcType=VARCHAR}, #{sCylcDate,jdbcType=DATE}, #{sEducation,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.changmq.partymanager.domain.Student" >
    insert into pm_user_student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="pbId != null" >
        pb_id,
      </if>
      <if test="psId != null" >
        ps_id,
      </if>
      <if test="paId != null" >
        pa_id,
      </if>
      <if test="pmId != null" >
        pm_id,
      </if>
      <if test="nationId != null" >
        nation_id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="moblie != null" >
        moblie,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="userState != null" >
        user_state,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="ppId != null" >
        pp_id,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="sNo != null" >
        s_no,
      </if>
      <if test="sAge != null" >
        s_age,
      </if>
      <if test="sBirthday != null" >
        s_birthday,
      </if>
      <if test="sBirthPlace != null" >
        s_birth_place,
      </if>
      <if test="sNativePlace != null" >
        s_native_place,
      </if>
      <if test="sAddress != null" >
        s_address,
      </if>
      <if test="sCylcDate != null" >
        s_cylc_date,
      </if>
      <if test="sEducation != null" >
        s_education,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="pbId != null" >
        #{pbId,jdbcType=INTEGER},
      </if>
      <if test="psId != null" >
        #{psId,jdbcType=INTEGER},
      </if>
      <if test="paId != null" >
        #{paId,jdbcType=INTEGER},
      </if>
      <if test="pmId != null" >
        #{pmId,jdbcType=INTEGER},
      </if>
      <if test="nationId != null" >
        #{nationId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="moblie != null" >
        #{moblie,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="userState != null" >
        #{userState,jdbcType=BIT},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="ppId != null" >
        #{ppId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="sNo != null" >
        #{sNo,jdbcType=VARCHAR},
      </if>
      <if test="sAge != null" >
        #{sAge,jdbcType=INTEGER},
      </if>
      <if test="sBirthday != null" >
        #{sBirthday,jdbcType=DATE},
      </if>
      <if test="sBirthPlace != null" >
        #{sBirthPlace,jdbcType=VARCHAR},
      </if>
      <if test="sNativePlace != null" >
        #{sNativePlace,jdbcType=VARCHAR},
      </if>
      <if test="sAddress != null" >
        #{sAddress,jdbcType=VARCHAR},
      </if>
      <if test="sCylcDate != null" >
        #{sCylcDate,jdbcType=DATE},
      </if>
      <if test="sEducation != null" >
        #{sEducation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.changmq.partymanager.domain.StudentExample" resultType="java.lang.Integer" >
    select count(*) from pm_user_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update pm_user_student
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.pbId != null" >
        pb_id = #{record.pbId,jdbcType=INTEGER},
      </if>
      <if test="record.psId != null" >
        ps_id = #{record.psId,jdbcType=INTEGER},
      </if>
      <if test="record.paId != null" >
        pa_id = #{record.paId,jdbcType=INTEGER},
      </if>
      <if test="record.pmId != null" >
        pm_id = #{record.pmId,jdbcType=INTEGER},
      </if>
      <if test="record.nationId != null" >
        nation_id = #{record.nationId,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.moblie != null" >
        moblie = #{record.moblie,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null" >
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.userState != null" >
        user_state = #{record.userState,jdbcType=BIT},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.ppId != null" >
        pp_id = #{record.ppId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.sNo != null" >
        s_no = #{record.sNo,jdbcType=VARCHAR},
      </if>
      <if test="record.sAge != null" >
        s_age = #{record.sAge,jdbcType=INTEGER},
      </if>
      <if test="record.sBirthday != null" >
        s_birthday = #{record.sBirthday,jdbcType=DATE},
      </if>
      <if test="record.sBirthPlace != null" >
        s_birth_place = #{record.sBirthPlace,jdbcType=VARCHAR},
      </if>
      <if test="record.sNativePlace != null" >
        s_native_place = #{record.sNativePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.sAddress != null" >
        s_address = #{record.sAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.sCylcDate != null" >
        s_cylc_date = #{record.sCylcDate,jdbcType=DATE},
      </if>
      <if test="record.sEducation != null" >
        s_education = #{record.sEducation,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update pm_user_student
    set user_id = #{record.userId,jdbcType=INTEGER},
      pb_id = #{record.pbId,jdbcType=INTEGER},
      ps_id = #{record.psId,jdbcType=INTEGER},
      pa_id = #{record.paId,jdbcType=INTEGER},
      pm_id = #{record.pmId,jdbcType=INTEGER},
      nation_id = #{record.nationId,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      moblie = #{record.moblie,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      user_state = #{record.userState,jdbcType=BIT},
      user_type = #{record.userType,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=INTEGER},
      pp_id = #{record.ppId,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      s_no = #{record.sNo,jdbcType=VARCHAR},
      s_age = #{record.sAge,jdbcType=INTEGER},
      s_birthday = #{record.sBirthday,jdbcType=DATE},
      s_birth_place = #{record.sBirthPlace,jdbcType=VARCHAR},
      s_native_place = #{record.sNativePlace,jdbcType=VARCHAR},
      s_address = #{record.sAddress,jdbcType=VARCHAR},
      s_cylc_date = #{record.sCylcDate,jdbcType=DATE},
      s_education = #{record.sEducation,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.changmq.partymanager.domain.Student" >
    update pm_user_student
    <set >
      <if test="pbId != null" >
        pb_id = #{pbId,jdbcType=INTEGER},
      </if>
      <if test="psId != null" >
        ps_id = #{psId,jdbcType=INTEGER},
      </if>
      <if test="paId != null" >
        pa_id = #{paId,jdbcType=INTEGER},
      </if>
      <if test="pmId != null" >
        pm_id = #{pmId,jdbcType=INTEGER},
      </if>
      <if test="nationId != null" >
        nation_id = #{nationId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="moblie != null" >
        moblie = #{moblie,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="userState != null" >
        user_state = #{userState,jdbcType=BIT},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="ppId != null" >
        pp_id = #{ppId,jdbcType=INTEGER},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="sNo != null" >
        s_no = #{sNo,jdbcType=VARCHAR},
      </if>
      <if test="sAge != null" >
        s_age = #{sAge,jdbcType=INTEGER},
      </if>
      <if test="sBirthday != null" >
        s_birthday = #{sBirthday,jdbcType=DATE},
      </if>
      <if test="sBirthPlace != null" >
        s_birth_place = #{sBirthPlace,jdbcType=VARCHAR},
      </if>
      <if test="sNativePlace != null" >
        s_native_place = #{sNativePlace,jdbcType=VARCHAR},
      </if>
      <if test="sAddress != null" >
        s_address = #{sAddress,jdbcType=VARCHAR},
      </if>
      <if test="sCylcDate != null" >
        s_cylc_date = #{sCylcDate,jdbcType=DATE},
      </if>
      <if test="sEducation != null" >
        s_education = #{sEducation,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.changmq.partymanager.domain.Student" >
    update pm_user_student
    set pb_id = #{pbId,jdbcType=INTEGER},
      ps_id = #{psId,jdbcType=INTEGER},
      pa_id = #{paId,jdbcType=INTEGER},
      pm_id = #{pmId,jdbcType=INTEGER},
      nation_id = #{nationId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      moblie = #{moblie,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      user_state = #{userState,jdbcType=BIT},
      user_type = #{userType,jdbcType=INTEGER},
      gender = #{gender,jdbcType=INTEGER},
      pp_id = #{ppId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      s_no = #{sNo,jdbcType=VARCHAR},
      s_age = #{sAge,jdbcType=INTEGER},
      s_birthday = #{sBirthday,jdbcType=DATE},
      s_birth_place = #{sBirthPlace,jdbcType=VARCHAR},
      s_native_place = #{sNativePlace,jdbcType=VARCHAR},
      s_address = #{sAddress,jdbcType=VARCHAR},
      s_cylc_date = #{sCylcDate,jdbcType=DATE},
      s_education = #{sEducation,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>